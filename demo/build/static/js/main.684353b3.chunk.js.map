{"version":3,"sources":["common/EnvironmentProvider.tsx","common/ErrorProvider.tsx","common/colors.ts","common/Buttons.tsx","api/api.ts","common/Notification.tsx","common/VotingPower.tsx","common/StyledSelect.tsx","common/EndpointSelector.tsx","common/Initialized.tsx","common/WithHeader.tsx","common/ErrorBoundary.tsx","common/LoadingBoundary.tsx","common/StyledContainer.tsx","common/StyledTokenInfo.tsx","registry/Registry.tsx","registry/Voting.tsx","registry/Propose.tsx","routes.tsx","reportWebVitals.js","index.js"],"names":["ENVIRONMENTS","label","value","programId","PublicKey","votingTokenMint","EnvironmentContext","React","createContext","EnvironmentContextProvider","children","useState","environment","setEnvironment","connection","useMemo","Connection","Provider","useEnvironmentCtx","context","useContext","Error","ErrorContext","ErrorProvider","ctx","wallet","useWallet","error","setError","useEffect","styledError","style","marginBottom","message","description","toString","type","showIcon","useError","Colors","green","red","border","borderColor","darkBlue","lightGray","white","headerColor","lightBlue","btnDisabled","StyledButton","styled","div","props","disabled","width","FavoriteButton","selected","PROGRAM_IDL","PENDING_TOKEN_INFOS_SEED","CONFIRM_OPTIONS","preflightCommitment","findAssociatedTokenAddress","walletAddress","mintAddress","a","web3","findProgramAddress","toBuffer","spl","getAccountInfo","account","token","getMintInfo","getPendingTokenAccountPubkey","console","log","anchor","bytes","utf8","encode","seededPubkey","bump","connected","publicKey","associatedAddress","sendTransaction","add","createAssociatedTokenAccountInstruction","provider","tokenMintPayer","Keypair","generate","requestAirdrop","airdropSignature","confirmTransaction","createMint","newMint","toBase58","createAssociatedTokenAccount","voterTokenAccount","mintTo","initialize","program","pendingTokensAccount","rpc","seed","accounts","user","tokenProgram","rent","SYSVAR_RENT_PUBKEY","systemProgram","SystemProgram","proposeToken","tokenInfo","propose","voteFor","splTokenProgramAddress","getProgramAccounts","filteredAccounts","filter","pubkey","Promise","all","map","tokenInfoAccount","fetch","data","resp","filteredResp","i","sort","b","tokenName","localeCompare","getPendingTokenAccount","pendingTokenInfos","checkVote","accountToCreate","fromSeed","toBytes","signers","cleanupExpired","cleanup","notify","txid","placement","notification","rel","target","href","slice","length","VotingPower","votingPower","setVotingPower","api","associatedTokenAccount","then","accountInfo","amount","toNumber","catch","e","useVotingPower","margin","onClick","id","StyledSelect","Select","StyledEndpointSelector","EndpointSelector","options","onChange","placeholder","Initialized","HeaderLink","setLoading","isInitialized","setIsInitialized","Header","StyledLink","withRouter","history","src","alt","FIND","push","VOTE","PROPOSE","fontSize","height","ErrorBoundary","state","errorInfo","warn","this","setState","Component","LoadingBoundary","loading","textAlign","padding","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","opacity","fill","d","attributeType","attributeName","from","to","dur","repeatCount","StyledContainer","StyledTokenInfo","useTokenInfos","tokenInfos","setTokenInfos","interval","setInterval","finally","clearInterval","Registry","tags","setTags","favorites","setFavorites","filteredTokenInfos","f","some","t","includes","sortedTokenInfos","f1","f2","isMulti","Array","reduce","acc","forEach","Set","v","className","tokenImageUrl","onError","tokenSymbol","background","color","t1","fav","role","fillRule","Voting","pendingTokenAccount","setPendingTokenAccount","pendingVotesInterval","pendingVotes","usePendingAccount","votingTokenMintInfo","setVotingTokenMintInfo","mintInfo","useVotingTokenMintInfo","UTC_seconds_now","Math","floor","Date","now","expiration","marginLeft","marginRight","votes","supply","Layout","StyledInput","Propose","address","setAddress","name","setName","symbol","setSymbol","imageUrl","setImageUrl","isLoading","setIsLoading","Routes","wallets","getPhantomWallet","autoConnect","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.684353b3.chunk.js","sourcesContent":["import React, { useMemo, useState, useContext } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\n\nexport interface Environment {\n  label: string;\n  value: string;\n  programId: PublicKey,\n  votingTokenMint?: PublicKey,\n}\n\nexport interface EnvironmentContextValues {\n  environment: Environment;\n  setEnvironment: (newEnvironment: Environment) => void;\n  connection: Connection;\n}\n\nexport const ENVIRONMENTS: Environment[] = [\n  {\n    label: 'mainnet',\n    value: 'https://api.mainnet-beta.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n  },\n  {\n    label: 'devnet',\n    value: 'https://api.devnet.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('J68Fquq5EQ4hnYPEo68DWC6bbxBGPQUDqMFmFV5nhCrj'),\n  },\n  {\n    label: 'testnet',\n    value: 'https://api.testnet.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('FSEuiPuTgqSbLbC89jgZ3umR6meYa69JwK7qVqayvjow'),\n  },\n  {\n    label: 'localnet',\n    value: 'http://127.0.0.1:8899',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('517PfUgFP3f52xHQzjjBfbTTCSmSVPzo5JeeiQEE9KWs'),\n  },\n];\n\nconst EnvironmentContext: React.Context<null | EnvironmentContextValues> = React.createContext<null | EnvironmentContextValues>(\n  null,\n);\n\nexport function EnvironmentContextProvider({ children }) {\n  // could be used by environment selector\n  const [environment, setEnvironment] = useState(ENVIRONMENTS[1]);\n\n  // only update connection if environment changes\n  const connection = useMemo(() => new Connection(environment.value, 'recent'), [environment]);\n\n  return (\n    <EnvironmentContext.Provider\n      value={{\n        environment,\n        setEnvironment,\n        connection,\n      }}\n    >\n      {children}\n    </EnvironmentContext.Provider>\n  );\n}\n\nexport function useEnvironmentCtx(): EnvironmentContextValues {\n  const context = useContext(EnvironmentContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context;\n}","import React, { useMemo, useState, useContext, useEffect } from 'react';\nimport { Alert } from 'antd';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useEnvironmentCtx } from './EnvironmentProvider';\n\nconst ErrorContext: React.Context<null | any> = React.createContext<null | any>(\n  null,\n);\n\nexport function ErrorProvider({ children }) {\n  const ctx = useEnvironmentCtx();\n  const wallet = useWallet();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setError(null);\n    return () => {};\n  }, [wallet, ctx]);\n  const styledError = error && (\n    <Alert\n      style={{ marginBottom: '10px' }}\n      message=\"Error\"\n      description={error.toString()}\n      type=\"error\"\n      showIcon\n    />\n  )\n  return (\n    <ErrorContext.Provider\n      value={{\n        setError,\n        styledError,\n      }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n}\n\nexport function useError() {\n  const ctx = useContext(ErrorContext);\n  return [ctx.styledError, ctx.setError];\n}\n// export function StyledError(children) {\n//   const [error, setError] = useState(null);\n//   return React.cloneElement(children, { error, setError });\n// }\n\n// export const useError = () => {\n//   const [error, setError] = useState(null);\n//   function handleError(e) {\n//     setError(e);\n//   }\n//   const wallet = useWallet();\n//   const connection = useConnection();\n//   useEffect(() => {\n//     handleError(null);\n//   }, [wallet, connection]);\n//   return [error, handleError]\n// }","const Colors = {\n  green: 'rgb(65, 199, 122)',\n  red: 'rgb(242, 59, 105)',\n  border: '1px solid rgb(64,73,78)',\n  borderColor: 'rgb(64,73,78)',\n  // darkBlue: 'hsla(0,0%,100%,.08)',\n  darkBlue: 'rgb(26, 32, 41)',\n  lightGray: 'rgba(255,255,255,0.6)',\n  white: 'hsla(0,0%,100%,.85)',\n  headerColor: 'hsla(0,0%,100%,.08)',\n  lightBlue: '#90caf9',\n  btnDisabled: 'hsla(0,0%,100%,.2)',\n}\n\nexport default Colors;","import styled from 'styled-components';\nimport Colors from 'common/colors';\n\ntype ButtonProps = {\n  disabled?: boolean,\n  width?: string,\n}\n\nexport const RoundedBtn = styled.div<ButtonProps>`\n  color: ${(props) => props.disabled ? Colors.btnDisabled : Colors.white};\n  text-decoration: none;\n  margin: 10px 0px;\n  padding: 5px;\n  border: ${Colors.border};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${Colors.btnDisabled};\n  width: ${(props) => props.width || '100px'};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledButton = styled.div<ButtonProps>`\n  color: ${(props) => props.disabled ? Colors.btnDisabled : Colors.white};\n  margin: 20px 0px 20px 0px;\n  border: 1px solid ${Colors.white};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  width: ${(props) => props.width || '100px'};\n  justify-content: center;\n  padding: 5px 8px;\n  background: ${Colors.btnDisabled};\n\n  &:hover {\n    cursor: pointer;\n    background: ${(props) => props.disabled ? Colors.btnDisabled : Colors.headerColor};\n    transition: .1s all;\n  }\n`;\n\ntype Selectable = {\n  selected?: boolean,\n}\n\nexport const FavoriteButton = styled.div<Selectable>`\n  position: absolute;\n  top: 10px;\n  right: 3%;\n  margin: 10px 0px 10px 0px;\n  border: 1px solid ${Colors.white};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  width: 30px;\n  justify-content: center;\n  background: ${(props) => props.selected ? Colors.lightGray : 'none'};\n  transition: .1s all;\n\n  &:hover {\n    cursor: pointer;\n    background: ${Colors.lightGray};\n  }\n\n  svg {\n    height: 20px;\n    width: 20px;\n    vertical-align: middle;\n    margin: 5px;\n    path {\n      fill: ${(props) => props.selected ? Colors.white : 'none'};\n      stroke: ${Colors.white};\n      stroke-width: .3px;\n    }\n  }\n`;\n","import * as web3 from '@solana/web3.js';\nimport * as anchor from '@project-serum/anchor';\nimport * as spl from \"@solana/spl-token\";\nimport idl from './spl_token_registry.json';\nimport { WalletContextState } from '@solana/wallet-adapter-react';\nimport { TokenInfo } from './TokenInfo';\nimport { PendingTokenAccount } from './PendingTokenInfo';\nimport { EnvironmentContextValues } from 'common/EnvironmentProvider';\n\n// const PROGRAM_ID = new web3.PublicKey(idl.metadata.address);\n// let VOTING_TOKEN_MINT = new web3.PublicKey(\"517PfUgFP3f52xHQzjjBfbTTCSmSVPzo5JeeiQEE9KWs\");\n// @ts-ignore\nconst PROGRAM_IDL : anchor.Idl = idl;\nconst PENDING_TOKEN_INFOS_SEED = \"pending_token_infos\";\nconst CONFIRM_OPTIONS: web3.ConfirmOptions = {\n  preflightCommitment: \"processed\",\n}\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: web3.PublicKey,\n  mintAddress: web3.PublicKey,\n): Promise<web3.PublicKey> {\n  return (await web3.PublicKey.findProgramAddress(\n      [\n          walletAddress.toBuffer(),\n          spl.TOKEN_PROGRAM_ID.toBuffer(),\n          mintAddress.toBuffer(),\n      ],\n      spl.ASSOCIATED_TOKEN_PROGRAM_ID\n  ))[0];\n}\n\nexport async function getAccountInfo(ctx: EnvironmentContextValues, account: web3.PublicKey): Promise<spl.AccountInfo> {\n  const token = new spl.Token(ctx.connection, ctx.environment.votingTokenMint, spl.TOKEN_PROGRAM_ID, null);\n  return await token.getAccountInfo(account);\n}\n\nexport async function getMintInfo(ctx: EnvironmentContextValues): Promise<spl.MintInfo> {\n  const token = new spl.Token(ctx.connection, ctx.environment.votingTokenMint, spl.TOKEN_PROGRAM_ID, null);\n  return await token.getMintInfo();\n}\n\nexport async function getPendingTokenAccountPubkey(programId: web3.PublicKey): Promise<[web3.PublicKey, number]> {\n  console.log(`Getting pending token infos PDA address for program ${programId} and seed ${PENDING_TOKEN_INFOS_SEED}`);\n  let [seededPubkey, bump] = await web3.PublicKey.findProgramAddress(\n    [anchor.utils.bytes.utf8.encode(PENDING_TOKEN_INFOS_SEED)],\n    programId,\n  );\n  return [seededPubkey, bump];\n}\n\nexport async function createVotingTokenAccount(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<web3.PublicKey> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const associatedAddress = await findAssociatedTokenAddress(wallet.publicKey, ctx.environment.votingTokenMint);\n  await wallet.sendTransaction(\n    new web3.Transaction().add(\n      spl.Token.createAssociatedTokenAccountInstruction(\n        spl.ASSOCIATED_TOKEN_PROGRAM_ID,\n        spl.TOKEN_PROGRAM_ID,\n        ctx.environment.votingTokenMint,\n        associatedAddress,\n        wallet.publicKey,\n        wallet.publicKey,\n      ),\n    ),\n    ctx.connection\n  );\n\n  return associatedAddress;\n}\n\nexport async function initMint(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<web3.PublicKey> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const tokenMintPayer = anchor.web3.Keypair.generate();\n  const airdropSignature = await ctx.connection.requestAirdrop(tokenMintPayer.publicKey, web3.LAMPORTS_PER_SOL);\n  await ctx.connection.confirmTransaction(airdropSignature);\n  const newMint = await spl.Token.createMint(\n    provider.connection,\n    tokenMintPayer,\n    tokenMintPayer.publicKey,\n    tokenMintPayer.publicKey,\n    2,\n    spl.TOKEN_PROGRAM_ID,\n  );\n  console.log(\"Mint created\", newMint.publicKey.toBase58());\n\n  // mint tokens to user\n  const voterTokenAccount = await newMint.createAssociatedTokenAccount(provider.wallet.publicKey);\n  await newMint.mintTo( \n    voterTokenAccount,\n    tokenMintPayer,\n    [],\n    1000,\n  );\n  console.log(`Account ${voterTokenAccount.toBase58()} received 1000 voting tokens mint ${newMint.publicKey.toBase58()}`);\n  return newMint.publicKey\n}\n\nexport async function initialize(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  \n  // const token = new spl.Token(\n  //   provider.ctx.connection,\n  //   votingTokenMint.publicKey,\n  //   spl.TOKEN_PROGRAM_ID,\n  //   {\n  //     publicKey: provider.wallet.publicKey,\n  //     secretKey: Buffer.from(\"KKxQMhVRUYBGetdHV9Suf1XZjb7yygNu3nYRfBHpovoi2oyL99bY4SejLnQY5tzr7RCWqG4degCH7xuZzHQgAdG\"),\n  //   }\n  // );\n\n  // create token account\n  const tokenMintPayer = anchor.web3.Keypair.generate();\n  if (!ctx.environment.votingTokenMint) {\n    const airdropSignature = await ctx.connection.requestAirdrop(tokenMintPayer.publicKey, web3.LAMPORTS_PER_SOL * 4);\n    await ctx.connection.confirmTransaction(airdropSignature);\n    const newMint = await spl.Token.createMint(\n      provider.connection,\n      tokenMintPayer,\n      tokenMintPayer.publicKey,\n      tokenMintPayer.publicKey,\n      2,\n      spl.TOKEN_PROGRAM_ID,\n    );\n    ctx.environment.votingTokenMint = newMint.publicKey;\n    console.log(\"Mint created\", ctx.environment.votingTokenMint);\n\n    // mint tokens to user\n    const voterTokenAccount = await newMint.createAssociatedTokenAccount(provider.wallet.publicKey);\n    await newMint.mintTo( \n      voterTokenAccount,\n      tokenMintPayer,\n      [],\n      1000,\n    );\n    console.log(`Account (${voterTokenAccount.toBase58()} received 1000 voting tokens`);\n  }\n\n  return program.rpc.initialize({ seed: anchor.utils.bytes.utf8.encode(PENDING_TOKEN_INFOS_SEED), bump }, {\n    accounts: {\n      pendingTokensAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint: ctx.environment.votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    // signers: [votingTokenMint],\n  });\n}\n\nexport async function proposeToken(wallet: WalletContextState, ctx: EnvironmentContextValues, tokenInfo: TokenInfo): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  return await program.rpc.propose(tokenInfo, {\n    accounts: {\n      pendingTokensAccount,\n    },\n  });\n}\n\nexport async function voteFor(wallet: WalletContextState, ctx: EnvironmentContextValues, splTokenProgramAddress: web3.PublicKey, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const voterTokenAccount = await findAssociatedTokenAddress(provider.wallet.publicKey, ctx.environment.votingTokenMint);\n  return program.rpc.voteFor(splTokenProgramAddress, {\n    accounts: {\n      pendingTokensAccount,\n      voterTokenAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint: votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n    }\n  });\n}\n\nexport async function getTokenInfo(ctx: EnvironmentContextValues, splTokenProgramAddress: web3.PublicKey): Promise<TokenInfo> {\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const accountToCreate = anchor.web3.Keypair.fromSeed(splTokenProgramAddress.toBytes());\n  // @ts-ignore\n  return await program.account.tokenInfoAccount.fetch(accountToCreate.publicKey);\n}\n\nexport async function getTokenInfos(ctx: EnvironmentContextValues): Promise<Array<TokenInfo>> {\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const accounts = await ctx.connection.getProgramAccounts(ctx.environment.programId);\n  const filteredAccounts = accounts.filter(({ pubkey, account }) => {\n    return pubkey.toBase58() !== pendingTokensAccount.toBase58();\n  });\n  const resp = await Promise.all(filteredAccounts.map(async (account) => {\n    try {\n      const data = await program.account.tokenInfoAccount.fetch(account.pubkey);\n      // @ts-ignore\n      return data.tokenInfo;\n    } catch (e) {\n      console.log(`Error mapping account ${account.pubkey}: ${e}`);\n      return null;\n    }\n  }));\n  // @ts-ignore\n  const filteredResp = resp.filter((i) => i != null);\n  return filteredResp.sort((a, b) => a.tokenName.localeCompare(b.tokenName));\n}\n\nexport async function getPendingTokenAccount(ctx: EnvironmentContextValues): Promise<PendingTokenAccount> {\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const account = await program.account.pendingTokenInfos.fetch(pendingTokensAccount)\n  // @ts-ignore\n  console.log(account.votingTokenMint.toBase58());\n  // @ts-ignore\n  return account;\n}\n\nexport async function checkVote(wallet: WalletContextState, ctx: EnvironmentContextValues, mintAddress: web3.PublicKey, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n\n  // const seed = Buffer.from(anchor.utils.bytes.utf8.encode(firstPassedVote.tokenInfo.splTokenProgramAddress.toBase58().substring(0,18)));\n  // const [accountToCreate, bump] = await web3.PublicKey.findProgramAddress(\n  //   [seed],\n  //   PROGRAM_ID\n  // );\n  // console.log(\"---->\", web3.PublicKey.isOnCurve(accountToCreate.toBytes()), firstPassedVote, accountToCreate.toBase58(), bump);\n  // console.log({seed, bump})\n\n  const accountToCreate = anchor.web3.Keypair.fromSeed(mintAddress.toBytes());\n  return program.rpc.checkVote(mintAddress, {\n    accounts: {\n      pendingTokensAccount,\n      accountToCreate: accountToCreate.publicKey,\n      user: program.provider.wallet.publicKey,\n      votingTokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    signers: [accountToCreate],\n  })\n}\n\nexport async function withdrawVotingBalace(wallet: WalletContextState, ctx: EnvironmentContextValues, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const voterTokenAccount = await findAssociatedTokenAddress(provider.wallet.publicKey, ctx.environment.votingTokenMint);\n  return await program.rpc.withdrawVotingBalace({\n    accounts: {\n      pendingTokensAccount,\n      voterTokenAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n    }\n  });\n}\n\nexport async function cleanupExpired(wallet: WalletContextState, ctx: EnvironmentContextValues, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  return await program.rpc.cleanup({\n    accounts: {\n      pendingTokensAccount,\n      votingTokenMint,\n    }\n  });\n}","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'topRight',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  notification[type]({\n    message: <span>{message}</span>,\n    description: (\n      <>\n        <div>{description}</div>\n        {txid && (\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={'https://explorer.solana.com/tx/' + txid}\n          >\n            View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n          </a>\n        )}\n      </>\n    ),\n    placement,\n  });\n} ","import { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { StyledButton } from 'common/Buttons';\nimport * as api from 'api/api';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { notify } from './Notification';\nimport { useError } from './ErrorProvider';\n\nexport function useVotingPower(): number {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [votingPower, setVotingPower] = useState(null);\n  useEffect(() => {\n    (async function checkInit() {\n      if (wallet && wallet.connected && ctx.environment.votingTokenMint) {\n        setError(null);\n        const associatedTokenAccount = await api.findAssociatedTokenAddress(wallet.publicKey, ctx.environment.votingTokenMint);\n        api.getAccountInfo(ctx, associatedTokenAccount)\n        .then((accountInfo) => setVotingPower(accountInfo.amount.toNumber()))\n        .catch((e) => {\n          setVotingPower(-1);\n          setError(e);\n        })\n      }\n    })()\n    return () => {};\n  }, [wallet, ctx]);\n  return votingPower;\n}\n\nexport function VotingPower() {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const votingPower = useVotingPower();\n  if (wallet && wallet.connected && votingPower != null) {\n    if (!ctx.environment.votingTokenMint) {\n      return (\n        <StyledButton\n          style={{ width: 'auto', margin: '0px 10px' }}\n          onClick={() => api.initMint(wallet, ctx)\n            .then((account) => notify({ message: 'Succes', description: 'Mint created', txid: account.toBase58() }))\n            .catch((e) => setError(e))\n          }\n        >\n          No Voting Mint (init)\n        </StyledButton>\n      )\n    } else if (votingPower < 0) {\n      return (\n        <StyledButton\n          style={{ width: 'auto', margin: '0px 10px' }}\n          onClick={() => api.createVotingTokenAccount(wallet, ctx)\n            .then((account) => notify({ message: 'Succes', description: 'Voting token account created', txid: account.toBase58() }))\n            .catch((e) => setError(e))\n          }\n        >\n          No Voting Account (init)\n        </StyledButton>\n      )\n    } else {\n      return <div id=\"voting-power\">Voting Power: {votingPower} SVOTE</div>\n    }\n  } else {\n    return <></>\n  }\n} ","import Colors from 'common/colors';\nimport Select from 'react-select';\nimport styled from 'styled-components';\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  div {\n    color: ${Colors.white};\n    background: ${Colors.darkBlue};\n    border-color: ${Colors.lightGray};\n  }\n`;\n","import { Environment, ENVIRONMENTS, useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { StyledSelect } from './StyledSelect';\nimport styled from 'styled-components';\n\nconst StyledEndpointSelector = styled(StyledSelect)`\n  margin: 0px 20px;\n  width: 100px;\n`;\n\nexport function EndpointSelector() {\n  const { environment, setEnvironment } = useEnvironmentCtx();\n  return (\n    <div>\n      <StyledEndpointSelector\n        options={ENVIRONMENTS}\n        onChange={(e: Environment) => setEnvironment(e)}\n        value={environment}\n        placeholder=\"Endpoint...\"\n      />\n    </div>\n  )\n} ","import { useState, useEffect } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { getPendingTokenAccount, initialize } from 'api/api';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { StyledButton } from 'common/Buttons';\nimport { notify } from './Notification';\nimport { useError } from './ErrorProvider';\n\nexport function Initialized({ setLoading }) {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [isInitialized, setIsInitialized] = useState(true);\n  useEffect(() => {\n    (async function checkInit() {\n      setIsInitialized(true);\n      await getPendingTokenAccount(ctx)\n      .catch((e) => {\n        // todo CHECK TYPEOF E\n        if (e) {\n          setIsInitialized(false);\n        }\n      });\n    })()\n    return () => {};\n  }, [wallet, ctx]);\n\n  if (!isInitialized) {\n    return (\n      <StyledButton style={{ margin: '0px 10px' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n        try {\n          setError(null);\n          setLoading(true);\n          const txid = await initialize(wallet, ctx);\n          notify({ message: 'Succes', description: 'Token governance program initialized', txid });\n          setIsInitialized(true);\n        } catch (e) {\n          setError(`${e}`);\n        } finally {\n          setLoading(false);\n        }\n      }}>\n        Init Program\n      </StyledButton>\n    )\n  }\n  return <></>\n}\n\nexport default Initialized;","import styled from 'styled-components';\nimport Colors from 'common/colors';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { VotingPower } from './VotingPower';\nimport { EndpointSelector } from './EndpointSelector';\nimport { useError } from './ErrorProvider';\nimport Initialized from './Initialized';\n\nconst Header = styled.div`\n  width: 96%;\n  margin: 0px auto;\n  height: 60px;\n  position: sticky;\n  // background: ${Colors.darkBlue};\n  color: ${Colors.white};\n  padding: 10px 2%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n\n  #left {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #right {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #logo {\n    height: 30px;\n  }\n\n  #logo-text {\n    padding-left: 10px;\n    font-size: 20px;\n    font-family: 'Karla', sans-serif;\n  }\n\n  #voting-power {\n    margin-left: 20px;\n    border: 1px solid ${Colors.borderColor};\n    border-radius: 10px;\n    background: ${Colors.darkBlue};\n    padding: 4px 8px;\n  }\n`;\n\ntype Selectable = {\n  selected?: boolean,\n}\n\nconst StyledLink = styled.a<Selectable>`\n  color: ${(props) => props.selected ? Colors.white : Colors.lightGray};\n  margin: 20px;\n  transition: .1s all;\n  text-decoration: none;\n\n  &:hover {\n    color: ${Colors.white};\n    cursor: pointer;\n  }\n`;\n\nexport enum HeaderLink {\n  FIND,\n  VOTE,\n  PROPOSE,\n}\n\ninterface HeaderProps extends RouteComponentProps {\n  children: JSX.Element;\n  selected: HeaderLink,\n};\n\nfunction WithHeader({ history, children, selected }: HeaderProps) {\n  const [error, setError] = useError();\n  return (\n    <>\n      <Header>\n        <div id=\"left\">\n          <img id=\"logo\" src=\"assets/logo4.png\" alt=\"SPL Token Names\" />\n          <span id=\"logo-text\">SPL TOKEN REGISTRY</span>\n          <VotingPower />\n          <Initialized setLoading={() => {}}/>\n        </div>\n        <div id=\"right\">\n          <StyledLink selected={selected === HeaderLink.FIND} onClick={() => { setError(null); history.push('/')} }>FIND</StyledLink>\n          <StyledLink selected={selected === HeaderLink.VOTE} onClick={() => { setError(null); history.push('/vote')} }>VOTE</StyledLink>\n          <StyledLink selected={selected === HeaderLink.PROPOSE} onClick={() => { setError(null); history.push('/propose')} }>PROPOSE</StyledLink>\n          <WalletMultiButton style={{ fontSize: '14px', height: '35px' }}/>\n          <EndpointSelector />\n        </div>\n      </Header>\n      {children}\n    </>\n  )\n}\n\nexport default withRouter(WithHeader);","import { Alert } from 'antd';\nimport React from 'react';\n\ntype ErrorState = { error: any, errorInfo: any };\n\nexport class ErrorBoundary extends React.Component<{}, ErrorState> {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.warn(error, errorInfo);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error && this.state.error.toString()}\n          type=\"error\"\n          showIcon\n        />\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport const useAsyncError = () => {\n  const [_, setError] = React.useState();\n  return React.useCallback(\n    e => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError],\n  );\n};","\n\nexport function LoadingBoundary({ loading, children }) {\n  if (loading) {\n    return (\n      <div style={{ textAlign: 'center', padding: '50px', margin: '0px auto' }}>\n        <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        width=\"40px\" height=\"40px\" viewBox=\"0 0 40 40\" enableBackground=\"new 0 0 40 40\" xmlSpace=\"preserve\">\n        <path opacity=\"0.2\" fill=\"#fff\" d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n          s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n          c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"/>\n        <path fill=\"#fff\" d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n          C22.32,8.481,24.301,9.057,26.013,10.047z\">\n          <animateTransform attributeType=\"xml\"\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 20 20\"\n            to=\"360 20 20\"\n            dur=\"0.5s\"\n            repeatCount=\"indefinite\"/>\n          </path>\n        </svg>\n      </div>\n    )\n  }\n  return children;\n}\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  width: 100%;\n  max-width: 1024px;\n  padding: 0px 20px;\n  margin: 0px auto;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;","import Colors from 'common/colors';\nimport styled from 'styled-components';\n\nexport const StyledTokenInfo = styled.div`\n  display: flex;\n  color: ${Colors.white};\n  margin: 50px 30px;\n  border-radius: 40px;\n  transition: .2s all;\n  position: relative;\n  // &:hover {\n  //   background: ${Colors.darkBlue};\n  //   cursor: pointer;\n  //   transform: scale(1.005);\n  // }\n\n  .image { \n    img {\n      width: 180px;\n      height: 180px;\n      border-radius: 50%;\n      border: ${Colors.border};\n      object-fit: cover;\n      background: ${Colors.darkBlue};\n    }\n  }\n\n  .title {\n    font-size: 18px;\n    margin-bottom: 6px;\n  }\n\n  .info {\n    height: 100%;\n    flex-grow: 2;\n    padding: 10px 30px;\n  }\n\n  .symbol {\n    color: ${Colors.lightGray};\n    max-width: 90%;\n  }\n\n  .address {\n    margin-top: 10px;\n    color: ${Colors.lightGray};\n    max-width: 90%;\n  }\n\n  .tags {\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n    font-size: 12px;\n    color: ${Colors.lightGray};\n\n    .tag {\n      border: ${Colors.border};\n      border-radius: 16px;\n      padding: 5px 10px;  \n      margin: 5px;\n      transition: .1s all;\n      &:hover {\n        background: ${Colors.darkBlue} !important;\n        color: ${Colors.lightGray} !important;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .expiration {\n    position: absolute;\n    right: 30px;\n    bottom: 50px;\n    color: ${Colors.lightGray};\n  }\n\n  .buttons {\n    display: flex;\n    gap: 10px;\n  }\n\n  .progress-outer {\n    width: 100%;\n    height: 20px;\n    border: ${Colors.border};\n    border-radius: 16px;\n    overflow: hidden;\n    background: ${Colors.darkBlue};\n    position: relative;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    .text {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .progress {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      background: ${Colors.green};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import Colors from 'common/colors';\nimport { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport * as api from 'api/api';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledContainer } from 'common/StyledContainer';\nimport { StyledTokenInfo } from 'common/StyledTokenInfo';\nimport { FavoriteButton } from 'common/Buttons';\nimport { TokenInfo } from 'api/TokenInfo';\nimport { useError } from 'common/ErrorProvider';\n\nexport function useTokenInfos(setLoading, setError): Array<TokenInfo> {\n  const ctx = useEnvironmentCtx();\n  const [tokenInfos, setTokenInfos] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (ctx) {\n        api.getTokenInfos(ctx).then((tokenInfos) => {\n          setTokenInfos(tokenInfos);\n        }).catch((e) => {\n          setError(e);\n          setTokenInfos([]);\n        }).finally(() => setLoading(false))\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [ctx, setError, setLoading]);\n  useEffect(() => {\n    setLoading(true);\n    return () => {};\n  }, [ctx, setLoading]);\n  return tokenInfos;\n}\n\nfunction Registry() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useError();\n  const tokenInfos = useTokenInfos(setLoading, setError);\n  const [tags, setTags] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const filteredTokenInfos = tags.length > 0 ? tokenInfos.filter((f) => tags.some(t => f.tags.includes(t))) : tokenInfos;\n  const sortedTokenInfos = [...filteredTokenInfos].sort((f1, f2) => {\n    if (favorites.includes(f1.mintAddress.toBase58()) && favorites.includes(f2.mintAddress.toBase58())) return 0;\n    else if (favorites.includes(f1.mintAddress.toBase58())) return -1\n    else if (favorites.includes(f2.mintAddress.toBase58())) return 1\n    else return 0;\n  });\n  return (\n    <>\n      <StyledContainer>\n        {error}\n        <StyledSelect\n          isMulti\n          options={Array.from(tokenInfos.reduce((acc, f) => {\n            f.tags.forEach(acc.add, acc);\n            return acc;\n          }, new Set())).map((t) => ({label: t, value: t}))}\n          onChange={(v) => setTags(v.map((t) => t.value))}\n          value={tags.map((t) => ({label: t, value: t}))}\n          placeholder=\"Find...\"\n        />\n        <LoadingBoundary loading={loading}>\n        <>\n          {sortedTokenInfos.map(f => (\n            <StyledTokenInfo key={f.mintAddress.toBase58()}>\n                <div className=\"image\">\n                  {/* @ts-ignore */}\n                  <img src={f.tokenImageUrl} onError={(e) => e.target.src='assets/placeholder-image.png'} alt={f.tokenName} />\n                </div>\n              <div className=\"info\">\n                <div className=\"title\">{f.tokenName}</div>\n                <div className=\"symbol\">{f.tokenSymbol}</div>\n                <div className=\"address\">{f.mintAddress.toBase58()}</div>\n                {f.tags.length > 0 &&\n                  <div className=\"tags\">{f.tags.map((t) => (\n                    <div\n                      key={`${f.mintAddress.toBase58()}_${t}`}\n                      className=\"tag\"\n                      style={{ background: tags.includes(t) ? Colors.white : 'none', color: tags.includes(t)? Colors.darkBlue : Colors.white }}\n                      onClick={() => tags.includes(t) ? setTags(tags.filter((t1) => t1 !== t)) : setTags([...tags, t])}\n                    >\n                      {t}\n                    </div>\n                    ))}\n                  </div>\n                }\n                <FavoriteButton onClick={() => favorites.includes(f.mintAddress.toBase58()) ? setFavorites(favorites.filter((fav) => fav !== f.mintAddress.toBase58())) : setFavorites([...favorites, f.mintAddress.toBase58()])} selected={favorites.includes(f.mintAddress.toBase58())}>\n                  <svg className=\"Icon_icon__2NnUo inline-block mr-1 h-3 w-3 align-baseline PlayerSummary_favoritedDisabled__3-f5T\" role=\"img\" aria-label=\"Favorite Player Button Star\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n                    <path fillRule=\"evenodd\" d=\"M4 6L1.649 7.236l.449-2.618L.196 2.764l2.628-.382L4 0l1.176 2.382 2.628.382-1.902 1.854.45 2.618z\"></path>\n                  </svg>\n                </FavoriteButton>\n              </div>\n            </StyledTokenInfo>\n          ))}\n        </>\n        </LoadingBoundary>\n      </StyledContainer>\n    </>\n  )\n}\n\nexport default Registry;","import Colors from 'common/colors';\nimport { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport * as api from 'api/api';\nimport * as spl from \"@solana/spl-token\";\nimport { PendingTokenAccount } from 'api/PendingTokenInfo';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { StyledButton, FavoriteButton } from 'common/Buttons';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledContainer } from 'common/StyledContainer';\nimport { notify } from 'common/Notification';\nimport { StyledTokenInfo } from 'common/StyledTokenInfo';\nimport { Initialized } from 'common/Initialized';\nimport { useError } from 'common/ErrorProvider';\n\nexport function usePendingAccount(setLoading, setError): PendingTokenAccount {\n  const ctx = useEnvironmentCtx();\n  const wallet = useWallet();\n  const [pendingTokenAccount, setPendingTokenAccount] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(\n      function pendingVotesInterval(): any {\n        if (ctx) {\n          api.getPendingTokenAccount(ctx)\n          .then((pendingVotes) => {\n            setPendingTokenAccount(pendingVotes);\n            setLoading([]);\n          })\n          .catch((e) => {\n            setLoading([]);\n            setPendingTokenAccount(null);\n            setError(`${e}`);\n          });\n        }\n        return pendingVotesInterval;\n    }(), 1000);\n    return () => clearInterval(interval);\n  }, [setLoading, wallet, ctx, setError]);\n  useEffect(() => {\n    setLoading(null);\n    return () => {};\n  }, [ctx, setLoading]);\n  return pendingTokenAccount;\n}\n\nexport function useVotingTokenMintInfo() : spl.MintInfo {\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [votingTokenMintInfo, setVotingTokenMintInfo] = useState(null);\n  useEffect(() => {\n    (async function checkInit() {\n      api.getMintInfo(ctx)\n      .then((mintInfo) => setVotingTokenMintInfo(mintInfo))\n      .catch((e) => console.log(e));\n    })()\n    return () => {};\n  }, [wallet, ctx]);\n  return votingTokenMintInfo;\n}\n\nfunction Voting() {\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [loading, setLoading] = useState(null);\n  // const [error, setError] = useState(null);\n  const [error, setError] = useError();\n  const pendingTokenAccount = usePendingAccount(setLoading, setError);\n  const votingTokenMintInfo = useVotingTokenMintInfo();\n  const [tags, setTags] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  const pendingTokenInfos = (pendingTokenAccount && pendingTokenAccount.pendingTokenInfos) || [];\n  const filteredTokenInfos = tags.length > 0 ? pendingTokenInfos.filter((f) => tags.some(t => f.tokenInfo.tags.includes(t))) : pendingTokenInfos;\n  const sortedTokenInfos = [...filteredTokenInfos].sort((f1, f2) => {\n    if (favorites.includes(f1.tokenInfo.mintAddress.toBase58()) && favorites.includes(f2.tokenInfo.mintAddress.toBase58())) return 0;\n    else if (favorites.includes(f1.tokenInfo.mintAddress.toBase58())) return -1\n    else if (favorites.includes(f2.tokenInfo.mintAddress.toBase58())) return 1\n    else return 0;\n  });\n  console.log(loading);\n\n  const UTC_seconds_now = Math.floor(Date.now() / 1000);\n  return (\n    <>\n      <StyledContainer>\n        {/* {error && (\n          <Alert\n            style={{ marginBottom: '10px' }}\n            message=\"Error\"\n            description={error.toString()}\n            type=\"error\"\n            showIcon\n          />\n        )} */}\n        {error}\n        <StyledSelect\n          isMulti\n          // options={fundraisers.reduce((acc, f) => acc.concat(f.tags.map((t) => ({ label: t, value: t }))), [])}\n          options={Array.from(pendingTokenInfos.reduce((acc, f) => {\n            f.tokenInfo.tags.forEach(acc.add, acc);\n            return acc;\n          }, new Set())).map((t) => ({label: t, value: t}))}\n          onChange={(v) => setTags(v.map((t) => t.value))}\n          value={tags.map((t) => ({label: t, value: t}))}\n          placeholder=\"Find...\"\n        />\n\n        {/* <div style={{ margin: '0px auto' }}><Initialized setError={setError} setLoading={setLoading} /></div> */}\n        {sortedTokenInfos.some((i) => i.expiration.toNumber() <= UTC_seconds_now) && (\n          <StyledButton style={{ marginLeft: 'auto', marginRight: 'auto' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n              try {\n                setError(null);\n                const txid = await api.cleanupExpired(wallet, ctx, pendingTokenAccount.votingTokenMint);\n                setLoading(null);\n                notify({ message: 'Succes', description: 'You have cleaned up expired tokens. Be sure to check votes on those that are complete', txid });\n              } catch (e) {\n                setError(`${e}`);\n              }\n            }}>\n            Cleanup\n          </StyledButton>\n        )}\n        <LoadingBoundary loading={loading == null}>\n          <>\n            {sortedTokenInfos.map(f => (\n              <StyledTokenInfo key={f.tokenInfo.mintAddress.toBase58()}>\n                <LoadingBoundary loading={loading && loading.includes(f.tokenInfo.mintAddress.toBase58())}>\n                  <div className=\"image\">\n                    <img src={f.tokenInfo.tokenImageUrl} alt={f.tokenInfo.tokenName} />\n                  </div>\n                  <div className=\"info\">\n                    <div className=\"title\">{f.tokenInfo.tokenName}</div>\n                    <div className=\"symbol\">{f.tokenInfo.tokenSymbol}</div>\n                    <div className=\"address\">{f.tokenInfo.mintAddress.toBase58()}</div>\n                    {f.tokenInfo.tags.length > 0 &&\n                      <div className=\"tags\">{f.tokenInfo.tags.map((t) => (\n                        <div\n                          key={`${f.tokenInfo.mintAddress.toBase58()}_${t}`}\n                          className=\"tag\"\n                          style={{ background: tags.includes(t) ? Colors.white : 'none', color: tags.includes(t)? Colors.darkBlue : Colors.white }}\n                          onClick={() => tags.includes(t) ? setTags(tags.filter((t1) => t1 !== t)) : setTags([...tags, t])}\n                        >\n                          {t}\n                        </div>\n                        ))}\n                      </div>\n                    }\n                    <FavoriteButton onClick={() => favorites.includes(f.tokenInfo.mintAddress.toBase58()) ? setFavorites(favorites.filter((fav) => fav !== f.tokenInfo.mintAddress.toBase58())) : setFavorites([...favorites, f.tokenInfo.mintAddress.toBase58()])} selected={favorites.includes(f.tokenInfo.mintAddress.toBase58())}>\n                      <svg className=\"Icon_icon__2NnUo inline-block mr-1 h-3 w-3 align-baseline PlayerSummary_favoritedDisabled__3-f5T\" role=\"img\" aria-label=\"Favorite Player Button Star\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n                        <path fillRule=\"evenodd\" d=\"M4 6L1.649 7.236l.449-2.618L.196 2.764l2.628-.382L4 0l1.176 2.382 2.628.382-1.902 1.854.45 2.618z\"></path>\n                      </svg>\n                    </FavoriteButton>\n                    <div className=\"buttons\">\n                      <StyledButton width=\"100px\" disabled={!wallet || !wallet.connected} onClick={async () => {\n                        try {\n                          setError(null);\n                          const txid = await api.voteFor(wallet, ctx, f.tokenInfo.mintAddress, pendingTokenAccount.votingTokenMint);\n                          setLoading([...loading, f.tokenInfo.mintAddress.toBase58()])\n                          notify({ message: 'Succes', description: 'You have voted for this token', txid });\n                        } catch (e) {\n                          setError(`${e}`);\n                        }\n                      }}>\n                        Vote\n                      </StyledButton>\n                      {(f.expiration.toNumber() >= UTC_seconds_now || f.votes.toNumber() >= 0) && (\n                        <StyledButton disabled={!wallet || !wallet.connected} onClick={async () => {\n                            try {\n                              setError(null);\n                              const txid = await api.checkVote(wallet, ctx, f.tokenInfo.mintAddress, pendingTokenAccount.votingTokenMint);\n                              setLoading([...loading, f.tokenInfo.mintAddress.toBase58()])\n                              notify({ message: 'Succes', description: 'You have attempted to check the vote for this token', txid });\n                            } catch (e) {\n                              setError(`${e}`);\n                            }\n                          }}>\n                          Check Vote\n                        </StyledButton>\n                      )}\n                    </div>\n                    <div className=\"expiration\">{(f.expiration.toNumber() >= UTC_seconds_now) ?\n                      `${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60/60/24))}d ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60/60%24))}h ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60%60))}m ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)%60))}s`\n                      : 'EXPIRED (Check Vote)'}\n                    </div>\n                    <div className=\"progress-outer\">\n                      <div className=\"progress\" style={{ width: `${100 * f.votes.toNumber() / (votingTokenMintInfo && votingTokenMintInfo.supply.toNumber()) || 1}%` }}>\n                      </div>\n                      <div className=\"text\">\n                        <span>{f.votes.toNumber()} / {(votingTokenMintInfo && votingTokenMintInfo.supply.toNumber()) || \"...\"}</span>\n                      </div>\n                    </div>\n                  </div>\n                </LoadingBoundary>\n              </StyledTokenInfo>\n            ))}\n          </>\n        </LoadingBoundary>\n      </StyledContainer>\n    </>\n  )\n}\n\nexport default Voting;","import styled from 'styled-components';\nimport Colors from 'common/colors';\nimport { useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { proposeToken } from 'api/api';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport * as web3 from '@solana/web3.js';\nimport { notify } from 'common/Notification';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledButton } from 'common/Buttons';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { Initialized } from 'common/Initialized';\nimport { useError } from 'common/ErrorProvider';\n\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0px auto;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nconst StyledInput = styled.div`\n  .prompt {\n    color: ${Colors.white};\n    margin: 10px 0px;\n  }\n  input {\n    border: ${Colors.border};\n    border-radius: 4px;    \n    color: ${Colors.white};\n    padding: 6px;\n    background: none;\n    outline: none;\n    width: 100%;\n  }\n`;\n\nfunction Propose() {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [address, setAddress] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <Layout>\n      {error}\n      <LoadingBoundary loading={isLoading}>\n        <StyledInput>\n          <div className=\"prompt\">Mint Address</div>\n          <input onChange={(e) => setAddress(e.target.value)} value={address}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Name</div>\n          <input onChange={(e) => setName(e.target.value)} value={name}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Symbol</div>\n          <input onChange={(e) => setSymbol(e.target.value)} value={symbol}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Image URL</div>\n          <input onChange={(e) => setImageUrl(e.target.value)} value={imageUrl}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Tags</div>\n          <StyledSelect\n            style={{\"marginTop\": \"10px\"}}\n            isMulti\n            options={[\"defi\", \"ethereum\", \"wrapper\", \"wormhole\", \"utility-token\", \"social-token\", \"tokenized-stock\", \"stablecoin\"].map((t) => ({label: t, value: t}))}\n            onChange={(v) => setTags(v.map((t) => t.value))}\n            value={tags.map((t) => ({label: t, value: t}))}\n            placeholder=\"Tags...\"\n          />\n        </StyledInput>\n        <StyledButton style={{ marginBottom: '0px' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n          try {\n            setIsLoading(true);\n            const txid = await proposeToken(wallet, ctx, {\n              mintAddress: new web3.PublicKey(address),\n              tokenName: name,\n              tokenSymbol: symbol,\n              tokenImageUrl: imageUrl,\n              tags,\n            })\n            setIsLoading(false);\n            setAddress(\"\");\n            setName(\"\");\n            setSymbol(\"\");\n            setImageUrl(\"\");\n            setTags([]);\n            notify({ message: 'Succes', description: 'Token proposed succesfully', txid });\n          } catch (e) {\n            setIsLoading(false);\n            setError(`${e}`);\n          }\n        }}>\n          Submit\n        </StyledButton>\n        {/* <Initialized setError={setError} setLoading={setIsLoading} /> */}\n      </LoadingBoundary>\n    </Layout>\n  )\n}\n\nexport default Propose;","import { EnvironmentContextProvider } from 'common/EnvironmentProvider';\nimport { ErrorProvider } from 'common/ErrorProvider';\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletProvider} from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport WithHeader, { HeaderLink } from 'common/WithHeader';\nimport { ErrorBoundary } from 'common/ErrorBoundary';\nimport Registry from 'registry/Registry';\nimport Voting from 'registry/Voting';\nimport Propose from 'registry/Propose';\n\nexport default function Routes() {\n  return (\n      <EnvironmentContextProvider>\n        <WalletProvider wallets={[getPhantomWallet()]} autoConnect>\n          <WalletModalProvider>\n            <ErrorProvider>\n              <HashRouter basename={'/'}>\n                <Switch>\n                  <Route exact path=\"/\" component={() => (\n                    <WithHeader selected={HeaderLink.FIND}>\n                      <ErrorBoundary>\n                        <Registry />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                  <Route exact path=\"/vote\" component={() => (\n                    <WithHeader selected={HeaderLink.VOTE}>\n                      <ErrorBoundary>\n                        <Voting />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                  <Route exact path=\"/propose\" component={() => (\n                    <WithHeader selected={HeaderLink.PROPOSE}>\n                      <ErrorBoundary>\n                        <Propose />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                </Switch>\n              </HashRouter>\n            </ErrorProvider>\n          </WalletModalProvider>\n        </WalletProvider>\n      </EnvironmentContextProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}