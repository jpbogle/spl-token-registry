{"version":3,"sources":["common/EnvironmentProvider.tsx","common/ErrorProvider.tsx","common/colors.ts","common/Buttons.tsx","api/api.ts","common/Notification.tsx","common/VotingPower.tsx","common/StyledSelect.tsx","common/EndpointSelector.tsx","common/Initialized.tsx","common/WithHeader.tsx","common/ErrorBoundary.tsx","common/LoadingBoundary.tsx","common/StyledContainer.tsx","common/StyledTokenInfo.tsx","registry/Registry.tsx","registry/Voting.tsx","registry/Propose.tsx","routes.tsx","reportWebVitals.js","index.js"],"names":["ENVIRONMENTS","label","value","programId","PublicKey","votingTokenMint","EnvironmentContext","React","createContext","EnvironmentContextProvider","children","useState","environment","setEnvironment","connection","useMemo","Connection","Provider","useEnvironmentCtx","context","useContext","Error","ErrorContext","ErrorProvider","ctx","wallet","useWallet","error","setError","useEffect","styledError","style","marginBottom","message","description","toString","type","showIcon","useError","Colors","green","red","border","borderColor","darkBlue","lightGray","white","headerColor","lightBlue","btnDisabled","StyledButton","styled","div","props","disabled","width","FavoriteButton","selected","PROGRAM_IDL","PENDING_TOKEN_INFOS_SEED","CONFIRM_OPTIONS","preflightCommitment","findAssociatedTokenAddress","walletAddress","mintAddress","a","web3","findProgramAddress","toBuffer","spl","getAccountInfo","account","token","getMintInfo","getPendingTokenAccountPubkey","anchor","bytes","utf8","encode","seededPubkey","bump","connected","publicKey","associatedAddress","sendTransaction","add","createAssociatedTokenAccountInstruction","provider","tokenMintPayer","Keypair","generate","requestAirdrop","airdropSignature","confirmTransaction","createMint","newMint","console","log","toBase58","createAssociatedTokenAccount","voterTokenAccount","mintTo","initialize","program","pendingTokensAccount","rpc","seed","accounts","user","tokenProgram","rent","SYSVAR_RENT_PUBKEY","systemProgram","SystemProgram","proposeToken","tokenInfo","propose","voteType","voteFor","splTokenProgramAddress","getProgramAccounts","filteredAccounts","filter","pubkey","Promise","all","map","tokenInfoAccount","fetch","data","resp","filteredResp","i","sort","b","tokenName","localeCompare","getPendingTokenAccount","pendingTokenInfos","checkVote","currentTokenInfo","fromSeed","toBytes","catch","e","checkUpdateVote","checkCreateVote","signers","withdrawVotingBalace","cleanupExpired","cleanup","notify","txid","placement","notification","rel","target","href","slice","length","VotingPower","isChecked","setIsChecked","accountInfo","setAccountInfo","api","associatedTokenAccount","then","finally","useTokenAccountInfo","id","amount","toNumber","owner","onClick","className","margin","StyledSelect","Select","StyledEndpointSelector","EndpointSelector","options","onChange","placeholder","Initialized","HeaderLink","setLoading","isInitialized","setIsInitialized","Header","StyledLink","withRouter","history","src","alt","FIND","push","VOTE","PROPOSE","fontSize","height","ErrorBoundary","state","errorInfo","warn","this","setState","Component","LoadingBoundary","loading","textAlign","padding","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","opacity","fill","d","attributeType","attributeName","from","to","dur","repeatCount","StyledContainer","StyledTokenInfo","useTokenInfos","tokenInfos","setTokenInfos","interval","setInterval","clearInterval","Registry","tags","setTags","favorites","setFavorites","filteredTokenInfos","f","some","t","includes","sortedTokenInfos","f1","f2","isMulti","Array","reduce","acc","forEach","Set","v","tokenImageUrl","onError","tokenSymbol","background","color","t1","fav","role","fillRule","Voting","pendingTokenAccount","setPendingTokenAccount","pendingVotesInterval","pendingVotes","usePendingAccount","votingTokenMintInfo","setVotingTokenMintInfo","mintInfo","useVotingTokenMintInfo","UTC_seconds_now","Math","floor","Date","now","expiration","marginLeft","marginRight","votes","supply","Layout","StyledInput","Propose","address","setAddress","name","setName","symbol","setSymbol","imageUrl","setImageUrl","isLoading","setIsLoading","Routes","wallets","getPhantomWallet","autoConnect","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa9f2388.chunk.js","sourcesContent":["import React, { useMemo, useState, useContext } from 'react';\nimport { Connection, PublicKey } from '@solana/web3.js';\n\nexport interface Environment {\n  label: string;\n  value: string;\n  programId: PublicKey,\n  votingTokenMint?: PublicKey,\n}\n\nexport interface EnvironmentContextValues {\n  environment: Environment;\n  setEnvironment: (newEnvironment: Environment) => void;\n  connection: Connection;\n}\n\nexport const ENVIRONMENTS: Environment[] = [\n  {\n    label: 'mainnet',\n    value: 'https://api.mainnet-beta.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n  },\n  {\n    label: 'testnet',\n    value: 'https://api.testnet.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('FSEuiPuTgqSbLbC89jgZ3umR6meYa69JwK7qVqayvjow'),\n  },\n  {\n    label: 'devnet',\n    value: 'https://api.devnet.solana.com',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('J68Fquq5EQ4hnYPEo68DWC6bbxBGPQUDqMFmFV5nhCrj'),\n  },\n  {\n    label: 'localnet',\n    value: 'http://127.0.0.1:8899',\n    programId: new PublicKey('ru5MV6sy97YYhGx3WZjWV8jSzWaBShWyoofoapcqypz'),\n    votingTokenMint: new PublicKey('62JGbV4wX3EmKkSNDFiqq18bAMwzhG5VDrZVGZjwWwSP'),\n  },\n];\n\nconst EnvironmentContext: React.Context<null | EnvironmentContextValues> = React.createContext<null | EnvironmentContextValues>(\n  null,\n);\n\nexport function EnvironmentContextProvider({ children }) {\n  // could be used by environment selector\n  const [environment, setEnvironment] = useState(ENVIRONMENTS[2]);\n\n  // only update connection if environment changes\n  const connection = useMemo(() => new Connection(environment.value, 'recent'), [environment]);\n\n  return (\n    <EnvironmentContext.Provider\n      value={{\n        environment,\n        setEnvironment,\n        connection,\n      }}\n    >\n      {children}\n    </EnvironmentContext.Provider>\n  );\n}\n\nexport function useEnvironmentCtx(): EnvironmentContextValues {\n  const context = useContext(EnvironmentContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  return context;\n}","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert } from 'antd';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useEnvironmentCtx } from './EnvironmentProvider';\n\nconst ErrorContext: React.Context<null | any> = React.createContext<null | any>(\n  null,\n);\n\nexport function ErrorProvider({ children }) {\n  const ctx = useEnvironmentCtx();\n  const wallet = useWallet();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setError(null);\n    return () => {};\n  }, [wallet, ctx]);\n  const styledError = error && (\n    <Alert\n      style={{ marginBottom: '10px' }}\n      message=\"Error\"\n      description={error.toString()}\n      type=\"error\"\n      showIcon\n    />\n  )\n  return (\n    <ErrorContext.Provider\n      value={{\n        setError,\n        styledError,\n      }}\n    >\n      {children}\n    </ErrorContext.Provider>\n  );\n}\n\nexport function useError() {\n  const ctx = useContext(ErrorContext);\n  return [ctx.styledError, ctx.setError];\n}\n// export function StyledError(children) {\n//   const [error, setError] = useState(null);\n//   return React.cloneElement(children, { error, setError });\n// }\n\n// export const useError = () => {\n//   const [error, setError] = useState(null);\n//   function handleError(e) {\n//     setError(e);\n//   }\n//   const wallet = useWallet();\n//   const connection = useConnection();\n//   useEffect(() => {\n//     handleError(null);\n//   }, [wallet, connection]);\n//   return [error, handleError]\n// }","const Colors = {\n  green: 'rgb(65, 199, 122)',\n  red: 'rgb(242, 59, 105)',\n  border: '1px solid rgb(64,73,78)',\n  borderColor: 'rgb(64,73,78)',\n  // darkBlue: 'hsla(0,0%,100%,.08)',\n  darkBlue: 'rgb(26, 32, 41)',\n  lightGray: 'rgba(255,255,255,0.6)',\n  white: 'hsla(0,0%,100%,.85)',\n  headerColor: 'hsla(0,0%,100%,.08)',\n  lightBlue: '#90caf9',\n  btnDisabled: 'hsla(0,0%,100%,.2)',\n}\n\nexport default Colors;","import styled from 'styled-components';\nimport Colors from 'common/colors';\n\ntype ButtonProps = {\n  disabled?: boolean,\n  width?: string,\n}\n\nexport const RoundedBtn = styled.div<ButtonProps>`\n  color: ${(props) => props.disabled ? Colors.btnDisabled : Colors.white};\n  text-decoration: none;\n  margin: 10px 0px;\n  padding: 5px;\n  border: ${Colors.border};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${Colors.btnDisabled};\n  width: ${(props) => props.width || '100px'};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const StyledButton = styled.div<ButtonProps>`\n  color: ${(props) => props.disabled ? Colors.btnDisabled : Colors.white};\n  margin: 20px 0px 20px 0px;\n  border: 1px solid ${Colors.white};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  width: ${(props) => props.width || '100px'};\n  justify-content: center;\n  padding: 5px 8px;\n  background: ${Colors.btnDisabled};\n\n  &:hover {\n    cursor: pointer;\n    background: ${(props) => props.disabled ? Colors.btnDisabled : Colors.headerColor};\n    transition: .1s all;\n  }\n`;\n\ntype Selectable = {\n  selected?: boolean,\n}\n\nexport const FavoriteButton = styled.div<Selectable>`\n  position: absolute;\n  top: 10px;\n  right: 3%;\n  margin: 10px 0px 10px 0px;\n  border: 1px solid ${Colors.white};\n  border-radius: 9999px;\n  text-align: center;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  width: 30px;\n  justify-content: center;\n  background: ${(props) => props.selected ? Colors.lightGray : 'none'};\n  transition: .1s all;\n\n  &:hover {\n    cursor: pointer;\n    background: ${Colors.lightGray};\n  }\n\n  svg {\n    height: 20px;\n    width: 20px;\n    vertical-align: middle;\n    margin: 5px;\n    path {\n      fill: ${(props) => props.selected ? Colors.white : 'none'};\n      stroke: ${Colors.white};\n      stroke-width: .3px;\n    }\n  }\n`;\n","import * as web3 from '@solana/web3.js';\nimport * as anchor from '@project-serum/anchor';\nimport * as spl from \"@solana/spl-token\";\nimport idl from './spl_token_registry.json';\nimport { WalletContextState } from '@solana/wallet-adapter-react';\nimport { TokenInfo } from './TokenInfo';\nimport { PendingTokenAccount } from './PendingTokenInfo';\nimport { EnvironmentContextValues } from 'common/EnvironmentProvider';\n\n// @ts-ignore\nconst PROGRAM_IDL : anchor.Idl = idl;\nconst PENDING_TOKEN_INFOS_SEED = \"pending_token_infos\";\nconst CONFIRM_OPTIONS: web3.ConfirmOptions = {\n  preflightCommitment: \"processed\",\n}\n\nexport async function findAssociatedTokenAddress(\n  walletAddress: web3.PublicKey,\n  mintAddress: web3.PublicKey,\n): Promise<web3.PublicKey> {\n  return (await web3.PublicKey.findProgramAddress(\n      [\n          walletAddress.toBuffer(),\n          spl.TOKEN_PROGRAM_ID.toBuffer(),\n          mintAddress.toBuffer(),\n      ],\n      spl.ASSOCIATED_TOKEN_PROGRAM_ID\n  ))[0];\n}\n\nexport async function getAccountInfo(ctx: EnvironmentContextValues, account: web3.PublicKey): Promise<spl.AccountInfo> {\n  const token = new spl.Token(ctx.connection, ctx.environment.votingTokenMint, spl.TOKEN_PROGRAM_ID, null);\n  return await token.getAccountInfo(account);\n}\n\nexport async function getMintInfo(ctx: EnvironmentContextValues): Promise<spl.MintInfo> {\n  const token = new spl.Token(ctx.connection, ctx.environment.votingTokenMint, spl.TOKEN_PROGRAM_ID, null);\n  return await token.getMintInfo();\n}\n\nexport async function getPendingTokenAccountPubkey(programId: web3.PublicKey): Promise<[web3.PublicKey, number]> {\n  let [seededPubkey, bump] = await web3.PublicKey.findProgramAddress(\n    [anchor.utils.bytes.utf8.encode(PENDING_TOKEN_INFOS_SEED)],\n    programId,\n  );\n  return [seededPubkey, bump];\n}\n\nexport async function createVotingTokenAccount(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<web3.PublicKey> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const associatedAddress = await findAssociatedTokenAddress(wallet.publicKey, ctx.environment.votingTokenMint);\n  await wallet.sendTransaction(\n    new web3.Transaction().add(\n      spl.Token.createAssociatedTokenAccountInstruction(\n        spl.ASSOCIATED_TOKEN_PROGRAM_ID,\n        spl.TOKEN_PROGRAM_ID,\n        ctx.environment.votingTokenMint,\n        associatedAddress,\n        wallet.publicKey,\n        wallet.publicKey,\n      ),\n    ),\n    ctx.connection\n  );\n\n  return associatedAddress;\n}\n\nexport async function initMint(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<web3.PublicKey> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const tokenMintPayer = anchor.web3.Keypair.generate();\n  const airdropSignature = await ctx.connection.requestAirdrop(tokenMintPayer.publicKey, web3.LAMPORTS_PER_SOL);\n  await ctx.connection.confirmTransaction(airdropSignature);\n  const newMint = await spl.Token.createMint(\n    provider.connection,\n    tokenMintPayer,\n    tokenMintPayer.publicKey,\n    tokenMintPayer.publicKey,\n    2,\n    spl.TOKEN_PROGRAM_ID,\n  );\n  console.log(\"Mint created\", newMint.publicKey.toBase58());\n\n  // mint tokens to user\n  const voterTokenAccount = await newMint.createAssociatedTokenAccount(provider.wallet.publicKey);\n  await newMint.mintTo( \n    voterTokenAccount,\n    tokenMintPayer,\n    [],\n    100000,\n  );\n  console.log(`Account ${voterTokenAccount.toBase58()} received 1000 voting tokens mint ${newMint.publicKey.toBase58()}`);\n  return newMint.publicKey\n}\n\nexport async function initialize(wallet: WalletContextState, ctx: EnvironmentContextValues): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  \n  // const token = new spl.Token(\n  //   provider.ctx.connection,\n  //   votingTokenMint.publicKey,\n  //   spl.TOKEN_PROGRAM_ID,\n  //   {\n  //     publicKey: provider.wallet.publicKey,\n  //     secretKey: Buffer.from(\"KKxQMhVRUYBGetdHV9Suf1XZjb7yygNu3nYRfBHpovoi2oyL99bY4SejLnQY5tzr7RCWqG4degCH7xuZzHQgAdG\"),\n  //   }\n  // );\n\n  // create token account\n  const tokenMintPayer = anchor.web3.Keypair.generate();\n  if (!ctx.environment.votingTokenMint) {\n    const airdropSignature = await ctx.connection.requestAirdrop(tokenMintPayer.publicKey, web3.LAMPORTS_PER_SOL * 4);\n    await ctx.connection.confirmTransaction(airdropSignature);\n    const newMint = await spl.Token.createMint(\n      provider.connection,\n      tokenMintPayer,\n      tokenMintPayer.publicKey,\n      tokenMintPayer.publicKey,\n      2,\n      spl.TOKEN_PROGRAM_ID,\n    );\n    ctx.environment.votingTokenMint = newMint.publicKey;\n    console.log(\"Mint created\", ctx.environment.votingTokenMint);\n\n    // mint tokens to user\n    const voterTokenAccount = await newMint.createAssociatedTokenAccount(provider.wallet.publicKey);\n    await newMint.mintTo( \n      voterTokenAccount,\n      tokenMintPayer,\n      [],\n      1000,\n    );\n    console.log(`Account (${voterTokenAccount.toBase58()} received 1000 voting tokens`);\n  }\n\n  return program.rpc.initialize({ seed: anchor.utils.bytes.utf8.encode(PENDING_TOKEN_INFOS_SEED), bump }, {\n    accounts: {\n      pendingTokensAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint: ctx.environment.votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    // signers: [votingTokenMint],\n  });\n}\n\nexport async function proposeToken(wallet: WalletContextState, ctx: EnvironmentContextValues, tokenInfo: TokenInfo): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  return await program.rpc.propose({ tokenInfo, voteType: new anchor.BN(0) }, {\n    accounts: {\n      pendingTokensAccount,\n    },\n  });\n}\n\nexport async function voteFor(wallet: WalletContextState, ctx: EnvironmentContextValues, splTokenProgramAddress: web3.PublicKey, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const voterTokenAccount = await findAssociatedTokenAddress(provider.wallet.publicKey, ctx.environment.votingTokenMint);\n  return program.rpc.voteFor(splTokenProgramAddress, {\n    accounts: {\n      pendingTokensAccount,\n      voterTokenAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n    }\n  });\n}\n\nexport async function getTokenInfo(ctx: EnvironmentContextValues, splTokenProgramAddress: web3.PublicKey): Promise<TokenInfo> {\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const accountToCreate = anchor.web3.Keypair.fromSeed(splTokenProgramAddress.toBytes());\n  // @ts-ignore\n  return await program.account.tokenInfoAccount.fetch(accountToCreate.publicKey);\n}\n\nexport async function getTokenInfos(ctx: EnvironmentContextValues): Promise<Array<TokenInfo>> {\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const accounts = await ctx.connection.getProgramAccounts(ctx.environment.programId);\n  const filteredAccounts = accounts.filter(({ pubkey, account }) => {\n    return pubkey.toBase58() !== pendingTokensAccount.toBase58();\n  });\n  const resp = await Promise.all(filteredAccounts.map(async (account) => {\n    try {\n      const data = await program.account.tokenInfoAccount.fetch(account.pubkey);\n      // @ts-ignore\n      return data.tokenInfo;\n    } catch (e) {\n      console.log(`Error mapping account ${account.pubkey}: ${e}`);\n      return null;\n    }\n  }));\n  // @ts-ignore\n  const filteredResp = resp.filter((i) => i != null);\n  return filteredResp.sort((a, b) => a.tokenName.localeCompare(b.tokenName));\n}\n\nexport async function getPendingTokenAccount(ctx: EnvironmentContextValues): Promise<PendingTokenAccount> {\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const provider = new anchor.Provider(ctx.connection, null, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  console.log(pendingTokensAccount.toBase58());\n  const account = await program.account.pendingTokenInfos.fetch(pendingTokensAccount);\n  // @ts-ignore\n  return account;\n}\n\nexport async function checkVote(wallet: WalletContextState, ctx: EnvironmentContextValues, mintAddress: web3.PublicKey, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n\n  // const seed = Buffer.from(anchor.utils.bytes.utf8.encode(firstPassedVote.tokenInfo.splTokenProgramAddress.toBase58().substring(0,18)));\n  // const [currentTokenInfo, bump] = await web3.PublicKey.findProgramAddress(\n  //   [seed],\n  //   PROGRAM_ID\n  // );\n  // console.log(\"---->\", web3.PublicKey.isOnCurve(currentTokenInfo.toBytes()), firstPassedVote, currentTokenInfo.toBase58(), bump);\n  // console.log({seed, bump})\n\n  const currentTokenInfo = anchor.web3.Keypair.fromSeed(mintAddress.toBytes());\n  const accountInfo = await program.account.tokenInfoAccount.fetch(currentTokenInfo.publicKey).catch((e) => console.log(\"Assuming new token account\", e));\n  if (accountInfo) {\n    return program.rpc.checkUpdateVote(mintAddress, {\n      accounts: {\n        pendingTokensAccount,\n        currentTokenInfo: currentTokenInfo.publicKey,\n        user: program.provider.wallet.publicKey,\n        votingTokenMint,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      }\n    });\n    // return program.rpc.checkDeleteVote(mintAddress, {\n    //   accounts: {\n    //     pendingTokensAccount,\n    //     currentTokenInfo: currentTokenInfo.publicKey,\n    //     user: program.provider.wallet.publicKey,\n    //     votingTokenMint,\n    //     systemProgram: anchor.web3.SystemProgram.programId,\n    //   }\n    // });\n  }\n  return program.rpc.checkCreateVote(mintAddress, {\n    accounts: {\n      pendingTokensAccount,\n      currentTokenInfo: currentTokenInfo.publicKey,\n      user: program.provider.wallet.publicKey,\n      votingTokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    signers: [currentTokenInfo],\n  })\n}\n\nexport async function withdrawVotingBalace(wallet: WalletContextState, ctx: EnvironmentContextValues, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  const voterTokenAccount = await findAssociatedTokenAddress(provider.wallet.publicKey, ctx.environment.votingTokenMint);\n  return await program.rpc.withdrawVotingBalace({ seed: anchor.utils.bytes.utf8.encode(PENDING_TOKEN_INFOS_SEED), bump }, {\n    accounts: {\n      pendingTokensAccount,\n      voterTokenAccount,\n      user: provider.wallet.publicKey,\n      votingTokenMint,\n      tokenProgram: spl.TOKEN_PROGRAM_ID,\n    }\n  });\n}\n\nexport async function cleanupExpired(wallet: WalletContextState, ctx: EnvironmentContextValues, votingTokenMint: web3.PublicKey): Promise<string> {\n  if (!wallet.connected) throw Error(\"Wallet not connected\");\n  const provider = new anchor.Provider(ctx.connection, wallet, CONFIRM_OPTIONS);\n  const program = new anchor.Program(PROGRAM_IDL, ctx.environment.programId, provider);\n  const [pendingTokensAccount, _bump] = await getPendingTokenAccountPubkey(ctx.environment.programId);\n  return await program.rpc.cleanup({\n    accounts: {\n      pendingTokensAccount,\n      votingTokenMint,\n    }\n  });\n}","import React from 'react';\nimport { notification } from 'antd';\n\nexport function notify({\n  message,\n  description,\n  txid,\n  type = 'info',\n  placement = 'topRight',\n}: {\n  message: string;\n  description?: string | JSX.Element;\n  txid?: string;\n  type?: string;\n  placement?: string;\n}) {\n  notification[type]({\n    message: <span>{message}</span>,\n    description: (\n      <>\n        <div>{description}</div>\n        {txid && (\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href={'https://explorer.solana.com/tx/' + txid}\n          >\n            View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\n          </a>\n        )}\n      </>\n    ),\n    placement,\n  });\n} ","import { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { StyledButton } from 'common/Buttons';\nimport * as api from 'api/api';\nimport * as spl from \"@solana/spl-token\";\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { notify } from './Notification';\nimport { useError } from './ErrorProvider';\n\nexport function useTokenAccountInfo(isChecked: boolean, setIsChecked: Function): spl.AccountInfo {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [accountInfo, setAccountInfo] = useState(null);\n  useEffect(() => {\n    (async function checkInit() {\n      if (wallet && wallet.connected && ctx.environment.votingTokenMint) {\n        setError(null);\n        const associatedTokenAccount = await api.findAssociatedTokenAddress(wallet.publicKey, ctx.environment.votingTokenMint);\n        api.getAccountInfo(ctx, associatedTokenAccount)\n        .then((accountInfo) => setAccountInfo(accountInfo))\n        .catch((e) => {\n          setError(e);\n        })\n        .finally(() => setIsChecked(true));\n      }\n    })()\n    return () => {};\n  }, [wallet, ctx, isChecked]);\n  return accountInfo;\n}\n\nexport function VotingPower() {\n  const [error, setError] = useError();\n  const [isChecked, setIsChecked] = useState(false);\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const accountInfo = useTokenAccountInfo(isChecked, setIsChecked);\n  if (wallet && wallet.connected && isChecked) {\n    if (!ctx.environment.votingTokenMint) {\n      return (\n        <StyledButton\n          style={{ width: 'auto', margin: '0px 10px' }}\n          onClick={() => api.initMint(wallet, ctx)\n            .then((account) => notify({ message: 'Success', description: 'Mint created', txid: account.toBase58() }))\n            .catch((e) => setError(e))\n          }\n        >\n          No Voting Mint (init)\n        </StyledButton>\n      )\n    } else if (!accountInfo) {\n      return (\n        <StyledButton\n          style={{ width: 'auto', margin: '0px 10px' }}\n          onClick={() => api.createVotingTokenAccount(wallet, ctx)\n            .then((account) => {\n              notify({ message: 'Success', description: 'Voting token account created', txid: account.toBase58() });\n              setIsChecked(false);\n            })\n            .catch((e) => setError(e))\n          }\n        >\n          No Voting Account (init)\n        </StyledButton>\n      )\n    } else {\n      return (\n        <>\n          <div id=\"voting-power\">Voting Power: {accountInfo.amount.toNumber()} SVOTE\n            {accountInfo.owner.toBase58() !== wallet.publicKey.toBase58() && (\n              <i onClick={async() => {\n                api.withdrawVotingBalace(wallet, ctx, ctx.environment.votingTokenMint)\n                .then((txid) => {\n                  notify({ message: 'Success', description: 'Voting balance reclaimed', txid });\n                  setIsChecked(false);\n                })\n                .catch((e) => setError(e))\n              }} className=\"fas fa-sign-out-alt\"/>\n            )}\n          </div>\n        </>\n      )\n    }\n  } else {\n    return <></>\n  }\n} ","import Colors from 'common/colors';\nimport Select from 'react-select';\nimport styled from 'styled-components';\n\nexport const StyledSelect = styled(Select)`\n  width: 100%;\n  div {\n    color: ${Colors.white};\n    background: ${Colors.darkBlue};\n    border-color: ${Colors.lightGray};\n  }\n`;\n","import { Environment, ENVIRONMENTS, useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { StyledSelect } from './StyledSelect';\nimport styled from 'styled-components';\n\nconst StyledEndpointSelector = styled(StyledSelect)`\n  margin: 0px 20px;\n  width: 100px;\n`;\n\nexport function EndpointSelector() {\n  const { environment, setEnvironment } = useEnvironmentCtx();\n  return (\n    <div>\n      <StyledEndpointSelector\n        options={ENVIRONMENTS}\n        onChange={(e: Environment) => setEnvironment(e)}\n        value={environment}\n        placeholder=\"Endpoint...\"\n      />\n    </div>\n  )\n} ","import { useState, useEffect } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { getPendingTokenAccount, initialize } from 'api/api';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { StyledButton } from 'common/Buttons';\nimport { notify } from './Notification';\nimport { useError } from './ErrorProvider';\n\nexport function Initialized({ setLoading }) {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [isInitialized, setIsInitialized] = useState(true);\n  useEffect(() => {\n    (async function checkInit() {\n      setIsInitialized(true);\n      await getPendingTokenAccount(ctx)\n      .catch((e) => {\n        // todo CHECK TYPEOF E\n        if (e) {\n          setIsInitialized(false);\n        }\n      });\n    })()\n    return () => {};\n  }, [wallet, ctx]);\n\n  if (!isInitialized) {\n    return (\n      <StyledButton style={{ margin: '0px 10px' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n        try {\n          setError(null);\n          setLoading(true);\n          const txid = await initialize(wallet, ctx);\n          notify({ message: 'Succes', description: 'Token governance program initialized', txid });\n          setIsInitialized(true);\n        } catch (e) {\n          setError(`${e}`);\n        } finally {\n          setLoading(false);\n        }\n      }}>\n        Init Program\n      </StyledButton>\n    )\n  }\n  return <></>\n}\n\nexport default Initialized;","import styled from 'styled-components';\nimport Colors from 'common/colors';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { VotingPower } from './VotingPower';\nimport { EndpointSelector } from './EndpointSelector';\nimport { useError } from './ErrorProvider';\nimport Initialized from './Initialized';\n\nconst Header = styled.div`\n  z-index: 10;\n  width: 96%;\n  margin: 0px auto;\n  height: 60px;\n  position: sticky;\n  // background: ${Colors.darkBlue};\n  color: ${Colors.white};\n  padding: 10px 2%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n\n  #left {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #right {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #logo {\n    height: 30px;\n  }\n\n  #logo-text {\n    padding-left: 10px;\n    font-size: 20px;\n    font-family: 'Karla', sans-serif;\n  }\n\n  #voting-power {\n    margin: 0px 20px;\n    border: 1px solid ${Colors.borderColor};\n    border-radius: 10px;\n    background: ${Colors.darkBlue};\n    padding: 4px 8px;\n    i {\n      margin-left: 10px;\n      cursor: pointer;\n      &:hover {\n        color: ${Colors.borderColor};\n      }\n    }\n  }\n`;\n\ntype Selectable = {\n  selected?: boolean,\n}\n\nconst StyledLink = styled.a<Selectable>`\n  color: ${(props) => props.selected ? Colors.white : Colors.lightGray};\n  margin: 20px;\n  transition: .1s all;\n  text-decoration: none;\n\n  &:hover {\n    color: ${Colors.white};\n    cursor: pointer;\n  }\n`;\n\nexport enum HeaderLink {\n  FIND,\n  VOTE,\n  PROPOSE,\n}\n\ninterface HeaderProps extends RouteComponentProps {\n  children: JSX.Element;\n  selected: HeaderLink,\n};\n\nfunction WithHeader({ history, children, selected }: HeaderProps) {\n  const [error, setError] = useError();\n  return (\n    <>\n      <Header>\n        <div id=\"left\">\n          <img id=\"logo\" src=\"assets/logo4.png\" alt=\"SPL Token Names\" />\n          <span id=\"logo-text\">SPL TOKEN REGISTRY</span>\n          <VotingPower />\n          <Initialized setLoading={() => {}}/>\n        </div>\n        <div id=\"right\">\n          <StyledLink selected={selected === HeaderLink.FIND} onClick={() => { setError(null); history.push('/')} }>FIND</StyledLink>\n          <StyledLink selected={selected === HeaderLink.VOTE} onClick={() => { setError(null); history.push('/vote')} }>VOTE</StyledLink>\n          <StyledLink selected={selected === HeaderLink.PROPOSE} onClick={() => { setError(null); history.push('/propose')} }>PROPOSE</StyledLink>\n          <WalletMultiButton style={{ fontSize: '14px', height: '35px' }}/>\n          <EndpointSelector />\n        </div>\n      </Header>\n      {children}\n    </>\n  )\n}\n\nexport default withRouter(WithHeader);","import { Alert } from 'antd';\nimport React from 'react';\n\ntype ErrorState = { error: any, errorInfo: any };\n\nexport class ErrorBoundary extends React.Component<{}, ErrorState> {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.warn(error, errorInfo);\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return (\n        <Alert\n          message=\"Error\"\n          description={this.state.error && this.state.error.toString()}\n          type=\"error\"\n          showIcon\n        />\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport const useAsyncError = () => {\n  const [_, setError] = React.useState();\n  return React.useCallback(\n    e => {\n      setError(() => {\n        throw e;\n      });\n    },\n    [setError],\n  );\n};","\n\nexport function LoadingBoundary({ loading, children }) {\n  if (loading) {\n    return (\n      <div style={{ textAlign: 'center', padding: '50px', margin: '0px auto' }}>\n        <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n        width=\"40px\" height=\"40px\" viewBox=\"0 0 40 40\" enableBackground=\"new 0 0 40 40\" xmlSpace=\"preserve\">\n        <path opacity=\"0.2\" fill=\"#fff\" d=\"M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n          s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n          c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z\"/>\n        <path fill=\"#fff\" d=\"M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n          C22.32,8.481,24.301,9.057,26.013,10.047z\">\n          <animateTransform attributeType=\"xml\"\n            attributeName=\"transform\"\n            type=\"rotate\"\n            from=\"0 20 20\"\n            to=\"360 20 20\"\n            dur=\"0.5s\"\n            repeatCount=\"indefinite\"/>\n          </path>\n        </svg>\n      </div>\n    )\n  }\n  return children;\n}\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  width: 100%;\n  max-width: 1024px;\n  padding: 0px 20px;\n  margin: 0px auto;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;","import Colors from 'common/colors';\nimport styled from 'styled-components';\n\nexport const StyledTokenInfo = styled.div`\n  display: flex;\n  color: ${Colors.white};\n  margin: 50px 30px;\n  border-radius: 40px;\n  transition: .2s all;\n  position: relative;\n  // &:hover {\n  //   background: ${Colors.darkBlue};\n  //   cursor: pointer;\n  //   transform: scale(1.005);\n  // }\n\n  .image { \n    img {\n      width: 180px;\n      height: 180px;\n      border-radius: 50%;\n      border: ${Colors.border};\n      object-fit: cover;\n      background: ${Colors.darkBlue};\n    }\n  }\n\n  .title {\n    font-size: 18px;\n    margin-bottom: 6px;\n  }\n\n  .info {\n    height: 100%;\n    flex-grow: 2;\n    padding: 10px 30px;\n  }\n\n  .symbol {\n    color: ${Colors.lightGray};\n    max-width: 90%;\n  }\n\n  .address {\n    margin-top: 10px;\n    color: ${Colors.lightGray};\n    max-width: 90%;\n  }\n\n  .tags {\n    display: flex;\n    align-items: center;\n    margin-top: 10px;\n    font-size: 12px;\n    color: ${Colors.lightGray};\n\n    .tag {\n      border: ${Colors.border};\n      border-radius: 16px;\n      padding: 5px 10px;  \n      margin: 5px;\n      transition: .1s all;\n      &:hover {\n        background: ${Colors.darkBlue} !important;\n        color: ${Colors.lightGray} !important;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .expiration {\n    position: absolute;\n    right: 30px;\n    bottom: 50px;\n    color: ${Colors.lightGray};\n  }\n\n  .buttons {\n    display: flex;\n    gap: 10px;\n  }\n\n  .progress-outer {\n    width: 100%;\n    height: 20px;\n    border: ${Colors.border};\n    border-radius: 16px;\n    overflow: hidden;\n    background: ${Colors.darkBlue};\n    position: relative;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    .text {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .progress {\n      height: 100%;\n      width: 100%;\n      position: absolute;\n      background: ${Colors.green};\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n`;\n","import Colors from 'common/colors';\nimport { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport * as api from 'api/api';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledContainer } from 'common/StyledContainer';\nimport { StyledTokenInfo } from 'common/StyledTokenInfo';\nimport { FavoriteButton } from 'common/Buttons';\nimport { TokenInfo } from 'api/TokenInfo';\nimport { useError } from 'common/ErrorProvider';\n\nexport function useTokenInfos(setLoading, setError): Array<TokenInfo> {\n  const ctx = useEnvironmentCtx();\n  const [tokenInfos, setTokenInfos] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (ctx) {\n        api.getTokenInfos(ctx).then((tokenInfos) => {\n          setTokenInfos(tokenInfos);\n        }).catch((e) => {\n          setError(e);\n          setTokenInfos([]);\n        }).finally(() => setLoading(false))\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [ctx, setError, setLoading]);\n  useEffect(() => {\n    setLoading(true);\n    return () => {};\n  }, [ctx, setLoading]);\n  return tokenInfos;\n}\n\nfunction Registry() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useError();\n  const tokenInfos = useTokenInfos(setLoading, setError);\n  const [tags, setTags] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const filteredTokenInfos = tags.length > 0 ? tokenInfos.filter((f) => tags.some(t => f.tags.includes(t))) : tokenInfos;\n  const sortedTokenInfos = [...filteredTokenInfos].sort((f1, f2) => {\n    if (favorites.includes(f1.mintAddress.toBase58()) && favorites.includes(f2.mintAddress.toBase58())) return 0;\n    else if (favorites.includes(f1.mintAddress.toBase58())) return -1\n    else if (favorites.includes(f2.mintAddress.toBase58())) return 1\n    else return 0;\n  });\n  return (\n    <>\n      <StyledContainer>\n        {error}\n        <StyledSelect\n          isMulti\n          options={Array.from(tokenInfos.reduce((acc, f) => {\n            f.tags.forEach(acc.add, acc);\n            return acc;\n          }, new Set())).map((t) => ({label: t, value: t}))}\n          onChange={(v) => setTags(v.map((t) => t.value))}\n          value={tags.map((t) => ({label: t, value: t}))}\n          placeholder=\"Find...\"\n        />\n        <LoadingBoundary loading={loading}>\n        <>\n          {sortedTokenInfos.map(f => (\n            <StyledTokenInfo key={f.mintAddress.toBase58()}>\n                <div className=\"image\">\n                  {/* @ts-ignore */}\n                  <img src={f.tokenImageUrl} onError={(e) => e.target.src='assets/placeholder-image.png'} alt={f.tokenName} />\n                </div>\n              <div className=\"info\">\n                <div className=\"title\">{f.tokenName}</div>\n                <div className=\"symbol\">{f.tokenSymbol}</div>\n                <div className=\"address\">{f.mintAddress.toBase58()}</div>\n                {f.tags.length > 0 &&\n                  <div className=\"tags\">{f.tags.map((t) => (\n                    <div\n                      key={`${f.mintAddress.toBase58()}_${t}`}\n                      className=\"tag\"\n                      style={{ background: tags.includes(t) ? Colors.white : 'none', color: tags.includes(t)? Colors.darkBlue : Colors.white }}\n                      onClick={() => tags.includes(t) ? setTags(tags.filter((t1) => t1 !== t)) : setTags([...tags, t])}\n                    >\n                      {t}\n                    </div>\n                    ))}\n                  </div>\n                }\n                <FavoriteButton onClick={() => favorites.includes(f.mintAddress.toBase58()) ? setFavorites(favorites.filter((fav) => fav !== f.mintAddress.toBase58())) : setFavorites([...favorites, f.mintAddress.toBase58()])} selected={favorites.includes(f.mintAddress.toBase58())}>\n                  <svg className=\"Icon_icon__2NnUo inline-block mr-1 h-3 w-3 align-baseline PlayerSummary_favoritedDisabled__3-f5T\" role=\"img\" aria-label=\"Favorite Player Button Star\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n                    <path fillRule=\"evenodd\" d=\"M4 6L1.649 7.236l.449-2.618L.196 2.764l2.628-.382L4 0l1.176 2.382 2.628.382-1.902 1.854.45 2.618z\"></path>\n                  </svg>\n                </FavoriteButton>\n              </div>\n            </StyledTokenInfo>\n          ))}\n        </>\n        </LoadingBoundary>\n      </StyledContainer>\n    </>\n  )\n}\n\nexport default Registry;","import Colors from 'common/colors';\nimport { useEffect, useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport * as api from 'api/api';\nimport * as spl from \"@solana/spl-token\";\nimport { PendingTokenAccount } from 'api/PendingTokenInfo';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { StyledButton, FavoriteButton } from 'common/Buttons';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledContainer } from 'common/StyledContainer';\nimport { notify } from 'common/Notification';\nimport { StyledTokenInfo } from 'common/StyledTokenInfo';\nimport { Initialized } from 'common/Initialized';\nimport { useError } from 'common/ErrorProvider';\n\nexport function usePendingAccount(setLoading, setError): PendingTokenAccount {\n  const ctx = useEnvironmentCtx();\n  const wallet = useWallet();\n  const [pendingTokenAccount, setPendingTokenAccount] = useState(null);\n  useEffect(() => {\n    const interval = setInterval(\n      function pendingVotesInterval(): any {\n        if (ctx) {\n          api.getPendingTokenAccount(ctx)\n          .then((pendingVotes) => {\n            setPendingTokenAccount(pendingVotes);\n            setLoading([]);\n          })\n          .catch((e) => {\n            console.log(e);\n            setLoading([]);\n            setPendingTokenAccount(null);\n            setError(`${e}`);\n          });\n        }\n        return pendingVotesInterval;\n    }(), 1000);\n    return () => clearInterval(interval);\n  }, [setLoading, wallet, ctx, setError]);\n  useEffect(() => {\n    setLoading(null);\n    return () => {};\n  }, [ctx, setLoading]);\n  return pendingTokenAccount;\n}\n\nexport function useVotingTokenMintInfo() : spl.MintInfo {\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [votingTokenMintInfo, setVotingTokenMintInfo] = useState(null);\n  useEffect(() => {\n    (async function checkInit() {\n      api.getMintInfo(ctx)\n      .then((mintInfo) => setVotingTokenMintInfo(mintInfo))\n      .catch((e) => console.log(e));\n    })()\n    return () => {};\n  }, [wallet, ctx]);\n  return votingTokenMintInfo;\n}\n\nfunction Voting() {\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [loading, setLoading] = useState(null);\n  // const [error, setError] = useState(null);\n  const [error, setError] = useError();\n  const pendingTokenAccount = usePendingAccount(setLoading, setError);\n  const votingTokenMintInfo = useVotingTokenMintInfo();\n  const [tags, setTags] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  const pendingTokenInfos = (pendingTokenAccount && pendingTokenAccount.pendingTokenInfos) || [];\n  const filteredTokenInfos = tags.length > 0 ? pendingTokenInfos.filter((f) => tags.some(t => f.tokenInfo.tags.includes(t))) : pendingTokenInfos;\n  const sortedTokenInfos = [...filteredTokenInfos].sort((f1, f2) => {\n    if (favorites.includes(f1.tokenInfo.mintAddress.toBase58()) && favorites.includes(f2.tokenInfo.mintAddress.toBase58())) return 0;\n    else if (favorites.includes(f1.tokenInfo.mintAddress.toBase58())) return -1\n    else if (favorites.includes(f2.tokenInfo.mintAddress.toBase58())) return 1\n    else return 0;\n  });\n  const UTC_seconds_now = Math.floor(Date.now() / 1000);\n  return (\n    <>\n      <StyledContainer>\n        {/* {error && (\n          <Alert\n            style={{ marginBottom: '10px' }}\n            message=\"Error\"\n            description={error.toString()}\n            type=\"error\"\n            showIcon\n          />\n        )} */}\n        {error}\n        <StyledSelect\n          isMulti\n          // options={fundraisers.reduce((acc, f) => acc.concat(f.tags.map((t) => ({ label: t, value: t }))), [])}\n          options={Array.from(pendingTokenInfos.reduce((acc, f) => {\n            f.tokenInfo.tags.forEach(acc.add, acc);\n            return acc;\n          }, new Set())).map((t) => ({label: t, value: t}))}\n          onChange={(v) => setTags(v.map((t) => t.value))}\n          value={tags.map((t) => ({label: t, value: t}))}\n          placeholder=\"Find...\"\n        />\n\n        {/* <div style={{ margin: '0px auto' }}><Initialized setError={setError} setLoading={setLoading} /></div> */}\n        {sortedTokenInfos.some((i) => i.expiration.toNumber() <= UTC_seconds_now) && (\n          <StyledButton style={{ marginLeft: 'auto', marginRight: 'auto' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n              try {\n                setError(null);\n                const txid = await api.cleanupExpired(wallet, ctx, pendingTokenAccount.votingTokenMint);\n                setLoading(null);\n                notify({ message: 'Succes', description: 'You have cleaned up expired tokens. Be sure to check votes on those that are complete', txid });\n              } catch (e) {\n                setError(`${e}`);\n              }\n            }}>\n            Cleanup\n          </StyledButton>\n        )}\n        <LoadingBoundary loading={loading == null}>\n          <>\n            {sortedTokenInfos.map(f => (\n              <StyledTokenInfo key={f.tokenInfo.mintAddress.toBase58()}>\n                <LoadingBoundary loading={loading && loading.includes(f.tokenInfo.mintAddress.toBase58())}>\n                  <div className=\"image\">\n                    <img src={f.tokenInfo.tokenImageUrl} alt={f.tokenInfo.tokenName} />\n                  </div>\n                  <div className=\"info\">\n                    <div className=\"title\">{f.tokenInfo.tokenName}</div>\n                    <div className=\"symbol\">{f.tokenInfo.tokenSymbol}</div>\n                    <div className=\"address\">{f.tokenInfo.mintAddress.toBase58()}</div>\n                    {f.tokenInfo.tags.length > 0 &&\n                      <div className=\"tags\">{f.tokenInfo.tags.map((t) => (\n                        <div\n                          key={`${f.tokenInfo.mintAddress.toBase58()}_${t}`}\n                          className=\"tag\"\n                          style={{ background: tags.includes(t) ? Colors.white : 'none', color: tags.includes(t)? Colors.darkBlue : Colors.white }}\n                          onClick={() => tags.includes(t) ? setTags(tags.filter((t1) => t1 !== t)) : setTags([...tags, t])}\n                        >\n                          {t}\n                        </div>\n                        ))}\n                      </div>\n                    }\n                    <FavoriteButton onClick={() => favorites.includes(f.tokenInfo.mintAddress.toBase58()) ? setFavorites(favorites.filter((fav) => fav !== f.tokenInfo.mintAddress.toBase58())) : setFavorites([...favorites, f.tokenInfo.mintAddress.toBase58()])} selected={favorites.includes(f.tokenInfo.mintAddress.toBase58())}>\n                      <svg className=\"Icon_icon__2NnUo inline-block mr-1 h-3 w-3 align-baseline PlayerSummary_favoritedDisabled__3-f5T\" role=\"img\" aria-label=\"Favorite Player Button Star\" xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\">\n                        <path fillRule=\"evenodd\" d=\"M4 6L1.649 7.236l.449-2.618L.196 2.764l2.628-.382L4 0l1.176 2.382 2.628.382-1.902 1.854.45 2.618z\"></path>\n                      </svg>\n                    </FavoriteButton>\n                    <div className=\"buttons\">\n                      <StyledButton width=\"100px\" disabled={!wallet || !wallet.connected} onClick={async () => {\n                        try {\n                          setError(null);\n                          const txid = await api.voteFor(wallet, ctx, f.tokenInfo.mintAddress, pendingTokenAccount.votingTokenMint);\n                          setLoading([...loading, f.tokenInfo.mintAddress.toBase58()])\n                          notify({ message: 'Success', description: 'You have voted for this token', txid });\n                        } catch (e) {\n                          setError(`${e}`);\n                        }\n                      }}>\n                        Vote\n                      </StyledButton>\n                      {(f.expiration.toNumber() >= UTC_seconds_now || f.votes.toNumber() >= 0) && (\n                        <StyledButton disabled={!wallet || !wallet.connected} onClick={async () => {\n                            try {\n                              setError(null);\n                              const txid = await api.checkVote(wallet, ctx, f.tokenInfo.mintAddress, pendingTokenAccount.votingTokenMint);\n                              setLoading([...loading, f.tokenInfo.mintAddress.toBase58()])\n                              notify({ message: 'Success', description: 'You have attempted to check the vote for this token', txid });\n                            } catch (e) {\n                              setError(`${e}`);\n                            }\n                          }}>\n                          Check Vote\n                        </StyledButton>\n                      )}\n                    </div>\n                    <div className=\"expiration\">{(f.expiration.toNumber() >= UTC_seconds_now) ?\n                      `${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60/60/24))}d ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60/60%24))}h ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)/60%60))}m ${(Math.floor((f.expiration.toNumber() - UTC_seconds_now)%60))}s`\n                      : 'EXPIRED (Check Vote)'}\n                    </div>\n                    <div className=\"progress-outer\">\n                      <div className=\"progress\" style={{ width: `${100 * f.votes.toNumber() / (votingTokenMintInfo && votingTokenMintInfo.supply.toNumber()) || 1}%` }}>\n                      </div>\n                      <div className=\"text\">\n                        <span>{f.votes.toNumber()} / {(votingTokenMintInfo && votingTokenMintInfo.supply.toNumber()) || \"...\"}</span>\n                      </div>\n                    </div>\n                  </div>\n                </LoadingBoundary>\n              </StyledTokenInfo>\n            ))}\n          </>\n        </LoadingBoundary>\n      </StyledContainer>\n    </>\n  )\n}\n\nexport default Voting;","import styled from 'styled-components';\nimport Colors from 'common/colors';\nimport { useState } from 'react';\nimport { useEnvironmentCtx } from 'common/EnvironmentProvider';\nimport { proposeToken } from 'api/api';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport * as web3 from '@solana/web3.js';\nimport { notify } from 'common/Notification';\nimport { StyledSelect } from 'common/StyledSelect';\nimport { StyledButton } from 'common/Buttons';\nimport { LoadingBoundary } from 'common/LoadingBoundary';\nimport { Initialized } from 'common/Initialized';\nimport { useError } from 'common/ErrorProvider';\n\nconst Layout = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0px auto;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nconst StyledInput = styled.div`\n  .prompt {\n    color: ${Colors.white};\n    margin: 10px 0px;\n  }\n  input {\n    border: ${Colors.border};\n    border-radius: 4px;    \n    color: ${Colors.white};\n    padding: 6px;\n    background: none;\n    outline: none;\n    width: 100%;\n  }\n`;\n\nfunction Propose() {\n  const [error, setError] = useError();\n  const wallet = useWallet();\n  const ctx = useEnvironmentCtx();\n  const [address, setAddress] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <Layout>\n      {error}\n      <LoadingBoundary loading={isLoading}>\n        <StyledInput>\n          <div className=\"prompt\">Mint Address</div>\n          <input onChange={(e) => setAddress(e.target.value)} value={address}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Name</div>\n          <input onChange={(e) => setName(e.target.value)} value={name}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Symbol</div>\n          <input onChange={(e) => setSymbol(e.target.value)} value={symbol}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Image URL</div>\n          <input onChange={(e) => setImageUrl(e.target.value)} value={imageUrl}/>\n        </StyledInput>\n\n        <StyledInput>\n          <div className=\"prompt\">Tags</div>\n          <StyledSelect\n            style={{\"marginTop\": \"10px\"}}\n            isMulti\n            options={[\"defi\", \"ethereum\", \"wrapper\", \"wormhole\", \"utility-token\", \"social-token\", \"tokenized-stock\", \"stablecoin\"].map((t) => ({label: t, value: t}))}\n            onChange={(v) => setTags(v.map((t) => t.value))}\n            value={tags.map((t) => ({label: t, value: t}))}\n            placeholder=\"Tags...\"\n          />\n        </StyledInput>\n        <StyledButton style={{ marginBottom: '0px' }} disabled={!wallet || !wallet.connected} onClick={async () => {\n          try {\n            setIsLoading(true);\n            const txid = await proposeToken(wallet, ctx, {\n              mintAddress: new web3.PublicKey(address),\n              tokenName: name,\n              tokenSymbol: symbol,\n              tokenImageUrl: imageUrl,\n              tags,\n            })\n            setIsLoading(false);\n            setAddress(\"\");\n            setName(\"\");\n            setSymbol(\"\");\n            setImageUrl(\"\");\n            setTags([]);\n            notify({ message: 'Succes', description: 'Token proposed succesfully', txid });\n          } catch (e) {\n            console.log(e);\n            setIsLoading(false);\n            setError(`${e}`);\n          }\n        }}>\n          Submit\n        </StyledButton>\n        {/* <Initialized setError={setError} setLoading={setIsLoading} /> */}\n      </LoadingBoundary>\n    </Layout>\n  )\n}\n\nexport default Propose;","import { EnvironmentContextProvider } from 'common/EnvironmentProvider';\nimport { ErrorProvider } from 'common/ErrorProvider';\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletProvider} from '@solana/wallet-adapter-react';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport WithHeader, { HeaderLink } from 'common/WithHeader';\nimport { ErrorBoundary } from 'common/ErrorBoundary';\nimport Registry from 'registry/Registry';\nimport Voting from 'registry/Voting';\nimport Propose from 'registry/Propose';\n\nexport default function Routes() {\n  return (\n      <EnvironmentContextProvider>\n        <WalletProvider wallets={[getPhantomWallet()]} autoConnect>\n          <WalletModalProvider>\n            <ErrorProvider>\n              <HashRouter basename={'/'}>\n                <Switch>\n                  <Route exact path=\"/\" component={() => (\n                    <WithHeader selected={HeaderLink.FIND}>\n                      <ErrorBoundary>\n                        <Registry />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                  <Route exact path=\"/vote\" component={() => (\n                    <WithHeader selected={HeaderLink.VOTE}>\n                      <ErrorBoundary>\n                        <Voting />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                  <Route exact path=\"/propose\" component={() => (\n                    <WithHeader selected={HeaderLink.PROPOSE}>\n                      <ErrorBoundary>\n                        <Propose />\n                      </ErrorBoundary>\n                    </WithHeader>\n                  )} />\n                </Switch>\n              </HashRouter>\n            </ErrorProvider>\n          </WalletModalProvider>\n        </WalletProvider>\n      </EnvironmentContextProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}